<project>
  <modelVersion>4.0.0</modelVersion>
  <groupId>de.neue_phase.asterisk</groupId>
  <artifactId>ClickDial</artifactId>
  <packaging>jar</packaging>
  <version>0.1.2-SNAPSHOT</version>
  <name>Asterisk ClickDial Application</name>
  <url>http://www.asteriskclickdial.de</url>
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
    </dependency>
    <dependency>
      <groupId>org.asteriskjava</groupId>
      <artifactId>asterisk-java</artifactId>
      <version>1.0.0.M3</version>
    </dependency>
    <dependency>
      <groupId>net.sf.jacob-project</groupId>
      <artifactId>jacob</artifactId>
      <version>1.18-M2</version>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.17</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.swt</groupId>
      <artifactId>org.eclipse.swt.win32.win32.x86_64</artifactId>
      <version>4.4</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jface</groupId>
      <artifactId>org.eclipse.jface</artifactId>
      <version>3.8.0.v20120521-2329</version>
    </dependency>
    <dependency>
      <groupId>com.mashape.unirest</groupId>
      <artifactId>unirest-java</artifactId>
      <version>1.4.3</version>
    </dependency>
    <dependency>
      <groupId>commons-validator</groupId>
      <artifactId>commons-validator</artifactId>
      <version>1.4.1</version>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>18.0</version>
    </dependency>
    <dependency>
      <groupId>com.melloware</groupId>
      <artifactId>jintellitype</artifactId>
      <version>1.3.9</version>
    </dependency>
    <dependency>
      <groupId>net.java.dev.jna</groupId>
      <artifactId>jna</artifactId>
      <version>4.1.0</version>
    </dependency>
  </dependencies>


  <!-- define the path properties needed -->
  <properties>

  	<!-- the place where bin java libs and native libs are located
  	     and needed to be packed inside the assembly -->
  	<b.resources.dir>${basedir}/build/</b.resources.dir>

  	<!-- where ressource filter files are located -->
  	<b.filter.dir>${b.resources.dir}/filters</b.filter.dir>

  	<!-- where launch4j configuration and build jarfiles are located -->
  	<b.launch4j.dir>${b.resources.dir}/l4j/</b.launch4j.dir>

  </properties>

  <build>
    <defaultGoal>install</defaultGoal>

    <!-- ${project.build.directory} -->
    <directory>${basedir}/target</directory>
    <finalName>${project.artifactId}-${project.version}</finalName>
    <filters>
      <filter>${b.filter.dir}/mky.properties</filter>
    </filters>

	<!-- this defines, that all content from javaSource is beeing copied and filtered and put into ${basedir}/target/classes -->
    <resources>

	  <!-- all native libs -->
	  <resource>
	  	<targetPath>native</targetPath>
    	<directory>${b.resources.dir}/native</directory>
	    <filtering>false</filtering>
	  </resource>

	  <!-- the java libs -->
	  <resource>
	  	<targetPath>lib</targetPath>
    	<directory>${b.resources.dir}/lib/</directory>
	    <filtering>false</filtering>
	  </resource>

	  <!-- add our icons -->
	  <resource>
	  	<targetPath>lib/icons</targetPath>
    	<directory>${b.resources.dir}/lib/icons/</directory>
	    <filtering>false</filtering>
	  </resource>

	  <resource>
	  	<targetPath>l4j</targetPath>
    	<directory>${b.launch4j.dir}/config/</directory>
	    <filtering>true</filtering>
	  </resource>

	  <!-- add our icons -->
	  <resource>
	  	<targetPath>conf</targetPath>
    	<directory>${b.resources.dir}/conf</directory>
	    <filtering>false</filtering>
	  </resource>

	</resources>

	<!-- define which stuff we will compile -->
    <sourceDirectory>${basedir}/javaSource</sourceDirectory>
    <scriptSourceDirectory>${basedir}/conf</scriptSourceDirectory>
    <outputDirectory>${basedir}/target/classes</outputDirectory>
    <testOutputDirectory>${basedir}/target/test-classes</testOutputDirectory>
    <pluginManagement>
      <!-- NOTE: These plugins will be removed from future versions of the super POM -->
      <!-- They are kept for the moment as they are very unlikely to conflict with lifecycle mappings (MNG-4453) -->
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.2</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
        </plugin>

        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>2.1</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
        </plugin>

        <!-- build the launch4j application . exe -->
        <plugin>
          <artifactId>maven-antrun-plugin</artifactId>
        </plugin>

        <!-- pack everything together with the assembly plugin -->
        <plugin>
          <artifactId>maven-assembly-plugin</artifactId>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>2.3</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>2.5.1</version>
        </plugin>
      </plugins>

    </pluginManagement>

    <!-- NOTE: These plugins will be removed from future versions of the super POM -->
    <!-- They are kept for the moment as they are very unlikely to conflict with lifecycle mappings (MNG-4453) -->
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <!-- exclude junit, we need runtime dependency only -->
              <includeScope>runtime</includeScope>
              <outputDirectory>${b.resources.dir}/lib/</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <index>true</index>
            <manifest>
              <mainClass>de.neue_phase.asterisk.ClickDial.boot.Bootstrap</mainClass>
              <addClasspath>true</addClasspath>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
              <classpathPrefix>lib/</classpathPrefix>
            </manifest>
            <addMavenDescriptor>false</addMavenDescriptor>
            <manifestEntries>
              <mode>development</mode>
              <url>${project.url}</url>
            </manifestEntries>
          </archive>
          <includes>
            <include>de/**</include>
          </includes>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
      </plugin>

<!--
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <configuration>
          <outputDirectory>${project.build.directory}</outputDirectory>
          <reportOutputDirectory>${project.build.directory}</reportOutputDirectory>
          <destDir>javadoc</destDir>
        </configuration>
        <executions>
          <execution>
            <phase>install</phase>
            <goals>
              <goal>javadoc</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
-->
      <!-- build the launch4j application . exe
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <phase>install</phase>
            <configuration>
              <tasks>
                <taskdef name="launch4j" classname="net.sf.launch4j.ant.Launch4jTask" classpath="${b.launch4j.dir}/lib/launch4j.jar:${b.launch4j.dir}/lib/xstream.jar" />
                <launch4j configFile="${b.launch4j.dir}/config/ClickDial.xml"/>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
-->
      <!-- pack everything together with the assembly plugin -->
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <finalName>${project.artifactId}-${project.version}-full</finalName>
          <descriptors>
            <descriptor>pom-assembly.zip.xml</descriptor>
          </descriptors>
        </configuration>
        <executions>
          <execution>
            <phase>install</phase>
            <goals>
              <goal>assembly</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>launch4j-xml-plugin</groupId>
        <artifactId>launch4j-xml-plugin</artifactId>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>exe</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <launch4jHome>${b.launch4j.dir}/launch4j.exe</launch4jHome>
          <configs>
            <param>${project.build.directory}/classes/l4j/AsteriskClickDial.xml</param>
          </configs>
        </configuration>
      </plugin>

    </plugins>
  </build>

  <licenses>
    <license>
      <name>BSD</name>
      <url>http://de.wikipedia.org/wiki/BSD-Lizenz</url>
      <distribution>manual</distribution>
      <comments>BSD License</comments>
    </license>
  </licenses>

  <organization>
    <name>neue-phase</name>
    <url>http://www.neue-phase.de</url>
  </organization>
  <developers>
    <developer>
      <id>mky</id>
      <name>Michael Konietzny</name>
      <email>michael@konietzny.at</email>
      <url>http://www.konietzny.at</url>
      <organization>NeuePhase</organization>
      <organizationUrl>http://www.neue-phase.de</organizationUrl>
      <roles>
        <role>architect</role>
        <role>developer</role>
      </roles>
      <timezone>+1</timezone>
    </developer>
  </developers>

  <issueManagement>
    <system>Trac</system>
    <url>${project.url}</url>
  </issueManagement>

  <repositories>
    <repository>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>central</id>
      <name>Maven Repository Switchboard</name>
      <url>http://repo1.maven.org/maven2</url>
    </repository>
    <repository>
      <id>swt-repo</id>
      <url>https://swt-repo.googlecode.com/svn/repo/</url>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <releases>
        <updatePolicy>never</updatePolicy>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>central</id>
      <name>Maven Plugin Repository</name>
      <url>http://repo1.maven.org/maven2</url>
    </pluginRepository>
      <pluginRepository>
        <id>launch4j-xml-plugin-repo</id>
        <name>launch4j-xml-plugin Repository for Maven</name>
        <url>https://launch4j-xml-plugin.googlecode.com/svn/repo</url>
      </pluginRepository>
  </pluginRepositories>

</project>